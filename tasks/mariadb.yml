---
- assert:
    that: ansible_distribution == "Debian" and ansible_distribution_major_version in [ "11" ]
    msg: "Only Debian 11 is supported, this is {{ ansible_distribution }} {{ ansible_distribution_major_version }}"

- name: MariaDB - Install MariaDB
  apt:
    name:
      - python3-pymysql
      - python3-mysqldb
      - mariadb-server
    update_cache: yes
  tags:
    - install

- name: MariaDB - Check if root password is set
  shell: >
    test ! -f /root/.my.cnf && mysqladmin -u root status
  changed_when: false
  failed_when: false
  register: root_pwd_check
  tags:
    - install

- name: MariaDB - Set MariaDB root password for the first time (root@localhost)
  mysql_user:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    check_implicit_admin: yes
    name: root
    password: "{{ mariadb_root_password }}"
  when: root_pwd_check.rc == 0
  tags:
    - install

- name: MariaDB - Create .mycnf configuration file
  copy:
    dest: "/root/.my.cnf"
    content: |
      [client]
      user = root
      password = {{ mariadb_root_password }}
  when: root_pwd_check.rc == 0
  tags:
    - install

- name: MariaDB - Create a databases
  mysql_db:
    name: "{{ item }}"
    state: present
  loop: "{{ mariadb_databases_to_create }}"
  tags:
    - install
    - scheme

- name: MariaDB - Remove a databases
  mysql_db:
    name: "{{ item }}"
    state: absent
  loop: "{{ mariadb_databases_to_remove }}"
  tags:
    - install
    - scheme

- name: MariaDB - Import a databases
  mysql_db:
    name: "{{ item.database }}"
    state: import
    target: "{{ item.script }}"
  loop: "{{ mariadb_scripts }}"
  when: mariadb_is_master
  tags:
    - install
    - scheme

- name: MariaDB - Configure a replication
  template:
    backup: true
    src: galera.cnf.j2
    dest: /etc/mysql/conf.d/galera.cnf
  when: mariadb_replication_enabled
  tags:
    - configuration
  notify: "restart mariadb"

- name: MariaDB - Create database users
  mysql_user:
    name: "{{ item.login }}"
    password: "{{ item.password }}"
    host: "{{ item.host | default(omit) }}"
    priv: "{{ item.privileges | default(omit) }}"
    state: present
  loop: "{{ mariadb_users_to_create }}"
  loop_control:
    label: "{{ item.login }}"
  tags:
    - configuration

- name: MariaDB - Remove database users
  mysql_user:
    name: "{{ item }}"
    state: absent
  loop: "{{ mariadb_users_to_remove }}"
  tags:
    - configuration

- name: MariaDB - Set privileges
  mysql_user:
    name: "{{ item.login }}"
    priv: "{{ item.privileges|join('/') }}"
    state: present
  loop: "{{ mariadb_users_privileges }}"
  loop_control:
    label: "{{ item.login }}"
  tags:
    - configuration

- name: "flush handlers"
  meta: flush_handlers
